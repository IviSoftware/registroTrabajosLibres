import { useState, useEffect } from "react";
import Swal from 'sweetalert2'
import { validateObjectFields, getBasicData } from "../../utils";
import { ContainerQuest } from "../../components/ContainerQuest"
import { InputCautivaForms } from "../../components/InputCautivaForms"
import { CautivaBtnForm } from "../../components/atomos/CautivaBtnForm";
import { GrFormNext } from "react-icons/gr";
import { CorrectQuestSend } from "../CorrectQuestSend";

import { getCountries } from "../../services/countriesService";
import { CautivaSelect } from "../../components/atomos/CautivaSelect";
import Confetti from 'react-confetti';
import CautivaLoader from "../../components/atomos/CautivaLoader";
import { NumberCautivaInput } from "../../components/atomos/NumberCautivaInput";
import { getSucursales, getDepartamentos } from "../../services/storesService";
import { sendRegister } from "../../services/userService";
import { Footer } from "../../components/Footer";
import { OptionsCautivaForms } from '../../components/OptionsCautivaForms'
import { TextCautiva } from "../../components/atomos/TextCautiva";
import { UploadFile } from "../../components/atomos/UploadFile";
import { CoauthorStage } from "../../components/organismos/CoauthorStage";


function Quest1() {
  const [percentageState, setPercentageState] = useState(10);
  const [dataModule, setDataModule] = useState([]);
  const [stage, setStage] = useState(1)
  const [sendingData, setSendingData] = useState(false)

  /*     const {  fullName,estadoProcedenciaAsistente } = getBasicData() */


  const keysToValidate1 = ["participacion"];
  const keysTraduction1 = ["participacion"];

  const keysToValidate2 = ["modulo"];
  const keysTraduction2 = ["Categoria"];

  const keysToValidate3 = ["nombre", "apellidos", "hospital","telefono"];
  const keysTraduction3 = ["nombre", "apellidos", "instituci칩n","telefono"];

  const keysToValidate4 = ["titulo"];
  const keysTraduction4 = ["titulo del trabajo libre"];
  
  const keysToValidate5 = ["resumenTrabajo"];
  const keysTraduction5 = ["resumen Trabajo"]; 


  const [errorApiGet, setErrorApiGet] = useState(false)
  const [typeError, setTypeError] = useState("");

  const [dimensions, setDimensions] = useState({ width: window.innerWidth, height: window.innerHeight });
  const [countries, setCountries] = useState([])


  const email = localStorage.getItem('emailQuests')
  const [ladaUser, setLadaUser] = useState('+52')

  const [sucursales, setSucursales] = useState([]);
  const [departamentos, setDepartamentos] = useState([]);


  useEffect(() => {
    const handleResize = () => {
      setDimensions({ width: window.innerWidth, height: window.innerHeight });
    };

    window.addEventListener('resize', handleResize);

    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  const contriesApi = async () => {
    const json = await getCountries();
    const data = json.map(item => {
      return {
        name: item.name.common,
        lada: item.idd.suffixes ? item.idd.root + item.idd.suffixes[0] : item.idd.root
      }
    })

    setCountries(data)
  }

  useEffect(() => {
    contriesApi()

    // Cargar las sucursales
    getSucursales().then((data) => {
      setSucursales(data);
    });

    // Cargar los departamentos
    getDepartamentos().then((data) => {
      setDepartamentos(data);
    });
  }, [])

  const sendDataToAPI = async () => {
    setSendingData(true)
    const response = await sendRegister(dataModule);
    setSendingData(false)
    if (!response.status == '200') {
      setErrorApiGet(true)
    }

  }

  const [mailError, setMailError] = useState(false)

  const verifyMail = (data) => {

    if (email !== data.adicionalConfirmarCorreo) {
      setMailError(true)
    } else {
      setMailError(false)
    }
  }



  return (
    <ContainerQuest percentageState={percentageState}>
      {(stage === 1 || stage === 2 || stage === 3) && <>
        <h1 className="mb-0">Bienvenido(a) <span className="wave-emoji">游녦</span></h1>
        <p className="mt-0 mb-4">Llene el formulario que se muestra a continuaci칩n para sub칤r su trabajo.</p>
      </>}


      {(stage === 5 || stage === 6 || stage === 7) && <>
        <h1 className="mb-0">춰Ya casi estamos <span className="pop-emoji">游녧</span>!</h1>
        <p className="mt-0 mb-4">Llene el formulario que se muestra a continuaci칩n para sub칤r su trabajo.</p>
      </>}

      {/*       {stage === 3 && <>
        <h1 className="mb-0">Verifiquemos 游븷</h1>
        <p className="mt-0 mb-4">Revise que sus datos sean correctos; en caso de que no, corr칤jalos.</p>
      </>} */}


      {stage === 1 && <div className="w-full flex flex-col gap-6">

        <p>La modalidad de la presentaci칩n de los trabajos libres ser치 definida
          por la Comisi칩n de Trabajos libres.</p>

        <OptionsCautivaForms setDataModule={setDataModule} dataModule={dataModule}
          text="Modalidad de presentaci칩n"
          options={['Presentaci칩n oral', 'Poster tradicional', 'Rapid-Fire', 'Caso cl칤nico (reporte de caso)', 'Sin preferencia']}
          name="participacion"
        />

        {dataModule.participacion === 'Presentaci칩n oral' && <p>
          Los trabajos aceptados tambi칠n tendr치n la opci칩n de ser presentados como p칩steres en la zona principal de exhibiciones. <br /><br />

          Aqu칤, los autores podr치n mostrar una versi칩n digital de su trabajo, lo que permitir치 una interacci칩n cercana con los asistentes interesados en su investigaci칩n. <br /><br />

          Tendr치n la oportunidad de estar presentes junto a sus p칩steres para responder preguntas y debatir con los asistentes. <br /><br />

          Los trabajos que obtengan una calificaci칩n destacada por parte del comit칠 de revisores tendr치n la oportunidad de realizar una presentaci칩n oral durante sesiones espec칤ficas del congreso. <br /><br />

          Cada presentaci칩n tendr치 una duraci칩n adecuada para profundizar en los detalles del estudio y sus resultados. <br /><br />

          Esta modalidad permitir치 una mayor interacci칩n con la audiencia y facilitar치 el intercambio de ideas entre los autores y los asistentes al congreso. <br /><br />

          El autor contar치 con un tiempo total de 10 minutos, de los cu치les, 8 minutos estar치n destinados a la presentaci칩n de su trabajo y 2 minutos destinados a las preguntas de la audiencia. El formato de presentaci칩n ser치 libre. <br /><br />

          Adem치s, para los trabajos seleccionados en esta modalidad, nuestro equipo de visuales y redes sociales crear치 un visual abstract atractivo para resaltar la relevancia y los hallazgos m치s significativos de su investigaci칩n, para su divulgaci칩n en nuestras redes sociales y plataformas virtuales. <br /><br />

          Esta divulgaci칩n adicional en redes sociales permitir치 alcanzar una mayor audiencia y promover치 la difusi칩n de su trabajo en la comunidad nefrol칩gica. <br /><br />

          NOTA: Presentaci칩n Oral de Trabajos de Nefrolog칤a Intervencionista (Videos): Los trabajos seleccionados para presentaci칩n oral de la categor칤a de Nefrolog칤a Intervencionista deber치n de incluir un video did치ctico de presentaci칩n del caso de una duraci칩n no mayor a 3 minutos. <br /><br />
          <hr className="mb-4"></hr>
          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>}
        {dataModule.participacion === 'Poster tradicional' && <p>
          Los trabajos aceptados tambi칠n tendr치n la opci칩n de ser presentados como p칩steres en la zona principal de exhibiciones. <br /><br />

          Aqu칤, los autores podr치n mostrar una versi칩n digital de su trabajo, lo que permitir치 una interacci칩n cercana con los asistentes interesados en su investigaci칩n. <br /><br />

          Tendr치n la oportunidad de estar presentes junto a sus p칩steres para responder preguntas y debatir con los asistentes. <br /><br />
          <hr className="mb-4"></hr>
          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>}
        {dataModule.participacion === 'Rapid-Fire' && <p>
          Los trabajos seleccionados para esta modalidad tendr치n la oportunidad de realizar una presentaci칩n "Rapid Fire" durante los horarios designados en la zona de p칩sters. Cada presentaci칩n ser치 breve, de 4 a 5 minutos, y se realizar치 en una pantalla digital. Esta opci칩n permitir치 una vista previa din치mica de los resultados y fomentar치 el inter칠s de los asistentes. <br /><br />
          <hr className="mb-4"></hr>
          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>}
        {dataModule.participacion === 'Caso cl칤nico (reporte de caso)' && <p>
          Los trabajos aceptados tambi칠n tendr치n la opci칩n de ser presentados como p칩steres en la zona principal de exhibiciones. <br /><br />

          Aqu칤, los autores podr치n mostrar una versi칩n digital de su trabajo, lo que permitir치 una interacci칩n cercana con los asistentes interesados en su investigaci칩n. <br /><br />

          Tendr치n la oportunidad de estar presentes junto a sus p칩steres para responder preguntas y debatir con los asistentes. <br /><br />
          <hr className="mb-4"></hr>
          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>}
        {dataModule.participacion === 'Sin preferencia' && <p>
          Los trabajos aceptados tambi칠n tendr치n la opci칩n de ser presentados como p칩steres en la zona principal de exhibiciones. <br /><br />

          Aqu칤, los autores podr치n mostrar una versi칩n digital de su trabajo, lo que permitir치 una interacci칩n cercana con los asistentes interesados en su investigaci칩n. <br /><br />

          Tendr치n la oportunidad de estar presentes junto a sus p칩steres para responder preguntas y debatir con los asistentes. <br /><br />

          <hr className="mb-4"></hr>

          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>}




        <CautivaBtnForm text="Siguiente" onClick={() => {

          console.log('dataModule', dataModule)

          const response = validateObjectFields(dataModule, keysToValidate1, keysTraduction1);

          if (mailError) {
            Swal.fire({
              title: "Los correos no coinciden",
              icon: "info"
            });
          } else {
            if (response.validate === 0) {
              Swal.fire({
                title: "Faltan por rellenar",
                text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
                icon: "info"
              });
            } else if (response.validate === 4) {
              Swal.fire({
                title: "Por favor coloque una edad valida",
                icon: "info"
              });
            } else if (response.validate == 1) {
              setStage(2)
              setPercentageState(30)
              console.log(dataModule)
              // Hacer scroll hasta arriba de la pantalla
              window.scrollTo({ top: 0, behavior: 'smooth' });
            } else {
              Swal.fire({
                title: "Por favor rellene todos los campos",
                icon: "info"
              });
            }

          }
        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}


      {stage === 2 && <div className="w-full flex flex-col gap-6">

        <OptionsCautivaForms setDataModule={setDataModule} dataModule={dataModule}
          text="Categor칤a*"
          options={['Nefropediatr칤a', 'Nefropatolog칤a', 'L칤quidos y electrolitos', 'Ciencias b치sicas', 'Enfermedad renal diab칠tica', 'Hipertension', 'Metabolismo mineral', 'Enfermedad renal cr칩nica', 'Di치lisis peritoneal', 'Hemodi치lisis', 'Transplante renal', 'Lesi칩n renal aguda', 'Enfermedades glomerulares', 'Nefrolog칤a intervencionista']}
          name="modulo"
        />


        <CautivaBtnForm text="Continuar" onClick={() => {
          const response = validateObjectFields(dataModule, keysToValidate2, keysTraduction2);
          if (response.validate === 0) {
            Swal.fire({
              title: "Faltan por rellenar",
              text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
              icon: "info"
            });
          } else if (response.validate == 1) {
            setStage(3)
            setPercentageState(30)

            window.scrollTo({ top: 0, behavior: 'smooth' });
          } else {
            Swal.fire({
              title: "Por favor rellene todos los campos",
              icon: "info"
            });
          }

        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}


      {stage === 3 && <div className="w-full flex flex-col gap-6">

        <InputCautivaForms setDataModule={setDataModule} dataModule={dataModule} type="text" text="Nombre(s)" name="nombre" />
        <InputCautivaForms setDataModule={setDataModule} dataModule={dataModule} type="text" text="Apellidos" name="apellidos" />
        <InputCautivaForms setDataModule={setDataModule} dataModule={dataModule} type="text" text="Instituci칩n y servicio a la que pertenece*" name="hospital" />


        <CautivaSelect title="Pa칤s*" name="pais" data={countries} type="country" setDataModule={setDataModule} dataModule={dataModule} setLadaUser={setLadaUser} />


        <NumberCautivaInput text="Telefono" name="telefono" setDataModule={setDataModule} dataModule={dataModule} data={countries} ladaUser={ladaUser} setLadaUser={setLadaUser} />


        <CautivaBtnForm text="Continuar" onClick={() => {
          const response = validateObjectFields(dataModule, keysToValidate3, keysTraduction3);
          if (response.validate === 0) {
            Swal.fire({
              title: "Faltan por rellenar",
              text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
              icon: "info"
            });
          } else if (response.validate == 1) {
            setStage(4)
            setPercentageState(50)

            window.scrollTo({ top: 0, behavior: 'smooth' });
          } else {
            Swal.fire({
              title: "Por favor rellene todos los campos",
              icon: "info"
            });
          }

        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}


      {stage === 4 && <div className="w-full flex flex-col gap-6">


        <p>Informaci칩n Adicional <br /><br />
          <hr className="mb-4"></hr>
          Los res칰menes deber치n ser escritos en espa침ol y contener los resultados de trabajos originales. Deber치 ser enviado en formato de archivo Word con Tipo de letra Times New Roman tama침o 12 pt. Le recordamos que la plataforma de env칤o de trabajos SOLO ACEPTA el formato de archivo Word.<br /><br />

          Es muy importante definir correctamente al PRIMER AUTOR del trabajo durante el proceso de registro en la plataforma. En caso de que el trabajo sea seleccionado para su presentaci칩n en el congreso, esta persona (primer autor) ser치 la 칰nica que recibir치 el apoyo de beca por parte del IMIN.<br /><br />

          La estructura del trabajo deber치 ser la siguiente:<br /><br />

          T칤tulo breve en MAY칔SCULAS, negritas y sin subrayar. Deber치 tener un m치ximo de 180 palabras. No deber치 incluir abreviaturas ni s칤mbolos.<br /><br />
          Nombre y apellidos completos del primer autor y los coautores. Primera letra del nombre(s) y apellidos deber치n ser en may칰scula y el resto en min칰sculas.<br /><br />
          Instituci칩n y servicio a la que pertenece cada uno de los autores, referenciados con n칰meros sub칤ndices consecutivos en el nombre de los autores.<br /><br />

          <hr className="mb-4"></hr>
          <b>Agradecemos su dedicaci칩n y compromiso con la investigaci칩n en nefrolog칤a y esperamos contar con su valiosa contribuci칩n en el Congreso Internacional en Nefrolog칤a IMIN 2023, en Acapulco.</b> <br /><br />

          <span className="text-center block">
            Atentamente, <br /><br />

            Comit칠 Organizador del Congreso Internacional en Nefrolog칤a IMIN 2024.
          </span>
        </p>


        <InputCautivaForms setDataModule={setDataModule} dataModule={dataModule} type="textRestrict" text="T칤tulo del trabajo libre*" name="titulo" />
        <p className="text-red-400">T칤tulo breve en MAY칔SCULAS. <br />
          Deber치 tener un m치ximo de 180 palabras. <br />
          No deber치 incluir abreviaturas ni s칤mbolos. <br />
        </p>


        <CautivaBtnForm text="Continuar" onClick={() => {
          const response = validateObjectFields(dataModule, keysToValidate4, keysTraduction4);
          if (response.validate === 0) {
            Swal.fire({
              title: "Faltan por rellenar",
              text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
              icon: "info"
            });
          } else if (response.validate == 1) {
            setStage(5)
            setPercentageState(60)

            window.scrollTo({ top: 0, behavior: 'smooth' });
          } else {
            Swal.fire({
              title: "Por favor rellene todos los campos",
              icon: "info"
            });
          }

        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}



      {stage === 5 && <div className="w-full flex flex-col gap-6">



        <TextCautiva setDataModule={setDataModule} dataModule={dataModule} type="text" text="Resumen del Trabajo*" name="resumenTrabajo" />
        <p className="text-red-400">El resumen deber치 ser escrito en espa침ol y contener los resultados de trabajos originales.
        </p>



        <CautivaBtnForm text="Continuar" onClick={() => {
          const response = validateObjectFields(dataModule, keysToValidate5, keysTraduction5);
          if (response.validate === 0) {
            Swal.fire({
              title: "Faltan por rellenar",
              text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
              icon: "info"
            });
          } else if (response.validate == 1) {
            setStage(6)
            setPercentageState(70)

            window.scrollTo({ top: 0, behavior: 'smooth' });
          } else {
            Swal.fire({
              title: "Por favor rellene todos los campos",
              icon: "info"
            });
          }

        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}


      {stage === 6 && <div className="w-full flex flex-col gap-6">

        <CautivaBtnForm text="Ver intrucciones para autores" onClick={() => null} />

        <p><b>Archivo de trabajo libre</b></p>
        <UploadFile />
        <p className="text-red-400">
          Solamente se permiten archivos en formato de Word para subir tu trabajo.
          Deber치 ser enviado en formato de archivo Word con Tipo de letra Times New Roman tama침o 12 pt. Le recordamos que la plataforma de env칤o de trabajos SOLO ACEPTA el formato de archivo Word.
        </p>


        <p><b>Archivo de no autor</b></p>
        <UploadFile />
        <p className="text-red-400">
          Subir el archivo sin los nombres de los autores  en formato Word.
        </p>





        <CautivaBtnForm text="Continuar" onClick={() => {
           setStage(7)
           setPercentageState(95)
          //const response = validateObjectFields(dataModule, keysToValidate1, keysTraduction1);
        /*   if (response.validate === 0) {
            Swal.fire({
              title: "Faltan por rellenar",
              text: `Los siguientes campos est치n vac칤os: ${response.fields.join(', ')}`,
              icon: "info"
            });
          } else if (response.validate == 1) {
            setStage(7)
            setPercentageState(95)

            window.scrollTo({ top: 0, behavior: 'smooth' });
          } else {
            Swal.fire({
              title: "Por favor rellene todos los campos",
              icon: "info"
            });
          } */

        }}>
          <GrFormNext className="btnIcon" />
        </CautivaBtnForm>
      </div>}



      {stage === 7 && <div className="w-full flex flex-col gap-6">
        <CoauthorStage setDataModule={setDataModule} dataModule={dataModule} setStage={setStage} setPercentageState={setPercentageState} />      
      </div>}



   {/*    {sendingData && <div className="w-full flex flex-col gap-6">
        <div className="w-full flex flex-col gap-6">
          <CautivaLoader />
        </div>
      </div>}
 */}
      {
        errorApiGet && <>
          <p>Ocurrio un error , contacte a soporte </p>
        </>
      }


      {(stage === 8 && !sendingData && !errorApiGet) && <div className="w-full flex flex-col gap-6">
        <Confetti

          recycle={false}  // Confeti se lanza una sola vez
        />
        <CorrectQuestSend />

      </div>}



    </ContainerQuest>
  )
}


export { Quest1 }